Baseline: 0.033794
------------------------------------------------------------------------------------
Using model for SVR(C=1.0, cache_size=200, coef0=0.0, degree=3, epsilon=0.1,
  gamma='auto_deprecated', kernel='rbf', max_iter=-1, shrinking=True,
  tol=0.001, verbose=False)
Predicted: 0.057979
	TP: 103	FP: 90
	FN: 161	TN: 152


------------------------------------------------------------------------------------
Using model for LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None,
         normalize=False)
Predicted: 0.023280
	TP: 98	FP: 91
	FN: 166	TN: 151


------------------------------------------------------------------------------------
Using model for DecisionTreeRegressor(criterion='mse', max_depth=None, max_features=None,
           max_leaf_nodes=None, min_impurity_decrease=0.0,
           min_impurity_split=None, min_samples_leaf=1,
           min_samples_split=2, min_weight_fraction_leaf=0.0,
           presort=False, random_state=None, splitter='best')
Predicted: 0.214524
	TP: 136	FP: 116
	FN: 128	TN: 126


------------------------------------------------------------------------------------
Using model for MLPRegressor(activation='relu', alpha=0.0001, batch_size='auto', beta_1=0.9,
       beta_2=0.999, early_stopping=False, epsilon=1e-08,
       hidden_layer_sizes=(100,), learning_rate='constant',
       learning_rate_init=0.001, max_iter=200, momentum=0.9,
       n_iter_no_change=10, nesterovs_momentum=True, power_t=0.5,
       random_state=None, shuffle=True, solver='adam', tol=0.0001,
       validation_fraction=0.1, verbose=False, warm_start=False)
Predicted: 0.085594
	TP: 130	FP: 106
	FN: 134	TN: 136


------------------------------------------------------------------------------------
Using model for KNeighborsRegressor(algorithm='auto', leaf_size=30, metric='minkowski',
          metric_params=None, n_jobs=None, n_neighbors=5, p=2,
          weights='uniform')
Predicted: 0.031867
	TP: 117	FP: 108
	FN: 147	TN: 134


------------------------------------------------------------------------------------
Using model for Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None,
   normalize=False, random_state=None, solver='auto', tol=0.001)
Predicted: 0.025579
	TP: 99	FP: 91
	FN: 165	TN: 151


------------------------------------------------------------------------------------
Using model for HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
        tol=1e-05, warm_start=False)
Predicted: -0.020274
	TP: 113	FP: 106
	FN: 151	TN: 136


------------------------------------------------------------------------------------
Using model for KernelRidge(alpha=1, coef0=1, degree=3, gamma=None, kernel='linear',
      kernel_params=None)
Predicted: 0.062641
	TP: 109	FP: 103
	FN: 155	TN: 139


------------------------------------------------------------------------------------
Using model for LinearSVR(C=1.0, dual=True, epsilon=0.0, fit_intercept=True,
     intercept_scaling=1.0, loss='epsilon_insensitive', max_iter=1000,
     random_state=None, tol=0.0001, verbose=0)
Predicted: -0.084770
	TP: 119	FP: 120
	FN: 145	TN: 122


------------------------------------------------------------------------------------
Using model for SGDRegressor(alpha=0.0001, average=False, early_stopping=False, epsilon=0.1,
       eta0=0.01, fit_intercept=True, l1_ratio=0.15,
       learning_rate='invscaling', loss='squared_loss', max_iter=None,
       n_iter=None, n_iter_no_change=5, penalty='l2', power_t=0.25,
       random_state=None, shuffle=True, tol=None, validation_fraction=0.1,
       verbose=0, warm_start=False)
Predicted: -0.329277
	TP: 33	FP: 36
	FN: 231	TN: 206


------------------------------------------------------------------------------------
Using model for GaussianProcessRegressor(alpha=1e-10, copy_X_train=True, kernel=None,
             n_restarts_optimizer=0, normalize_y=False,
             optimizer='fmin_l_bfgs_b', random_state=None)
Predicted: 0.130422
	TP: 129	FP: 108
	FN: 135	TN: 134